{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Monaco;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red57\green57\blue57;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c28627\c28627\c28627;\csgray\c0\c0;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs36 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8237 # hello-chtc.sub\uc0\u8236 \
# My very first HTCondor submit file\uc0\u8236 \
#\uc0\u8236 \
# Specify the HTCondor Universe (vanilla is the default and is used\uc0\u8236 \
#  for almost all jobs) and your desired name of the HTCondor log file,\uc0\u8236 \
#  which is where HTCondor will describe what steps it takes to run \uc0\u8236 \
#  your job. Wherever you see $(Cluster), HTCondor will insert the \uc0\u8236 \
#  queue number assigned to this set of jobs at the time of submission.\uc0\u8236 \
universe = vanilla\uc0\u8236 \
log = hello-chtc_$(Cluster).log\uc0\u8236 \
#\uc0\u8236 \
# Specify your executable (single binary or a script that runs several\uc0\u8236 \
#  commands), arguments, and a files for HTCondor to store standard\uc0\u8236 \
#  output (or "screen output").\uc0\u8236 \
#  $(Process) will be a integer number for each job, starting with "0"\uc0\u8236 \
#  and increasing for the relevant number of jobs.\uc0\u8236 \
executable = hello-chtc.sh\uc0\u8236 \
arguments = $(Process)\uc0\u8236 \
output = hello-chtc_$(Cluster)_$(Process).out\uc0\u8236 \
error = hello-chtc_$(Cluster)_$(Process).err\uc0\u8236 \
#\uc0\u8236 \
# Specify that HTCondor should transfer files to and from the\uc0\u8236 \
#  computer where each job runs. The last of these lines *would* be\uc0\u8236 \
#  used if there were any other files needed for the executable to use.\uc0\u8236 \
should_transfer_files = YES\uc0\u8236 \
when_to_transfer_output = ON_EXIT\uc0\u8236 \
# transfer_input_files = file1,/absolute/pathto/file2,etc\uc0\u8236 \
#\uc0\u8236 \
# Tell HTCondor what amount of compute resources\uc0\u8236 \
#  each job will need on the computer where it runs.\uc0\u8236 \
request_cpus = 1\uc0\u8236 \
request_memory = 1GB\uc0\u8236 \
request_disk = 1MB\uc0\u8236 \
#\uc0\u8236 \
# Tell HTCondor to run 3 instances of our job:\uc0\u8236 \
queue 3
\f1 \uc0\u8236 \
}